services:
  # nginx
  web:
    build:
      dockerfile: ./nginx/Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf      
    # depends_on:
    #   - php
  # php
  app:
    build:
      dockerfile: ./php/Dockerfile
      target: production
    # remove this for production
    # volumes:
    #   # preserve vendor folder
    #   - /var/www/html/vendor
    #   - ./app:/var/www/html
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      # depends_on:
  # mysql
  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    restart: unless-stopped
    volumes:
      - mysqldata:/var/lib/mysql      
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  # redis
  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin
    restart: unless-stopped
    ports:
      - 8001:80
    environment:
      MYSQL_ROOT_PASSWORD: password 
volumes:
  mysqldata:
  # redis:
  #   driver: local
  # mysql:
  #   driver: local